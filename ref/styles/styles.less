// A shoddy implementation of adding or removing styles based on configuration
// If this theme grows to support more features, I'll adjust how this works
@import "ui-syntax-include";
@import "ui-variables";

atom-text-editor {

    // Autocomplete & Ternjs, for legibility
    // https://atom.io/packages/autocomplete-plus
    // https://github.com/tststs/atom-ternjs
    atom-overlay {
        atom-ternjs-type {
            // temp styles, because it's
            // weird and broken when text wraps
            // at the end of your viewport
            // padding: 0;
            // border: none;
            // border-radius: 0;

            // span {
            //     padding: 0;
            // }
            // & > span {
            //     background: @base-background-color;
            //     box-shadow: 0 1px 5px rgba(0,0,0,0.3), inset 0px 1px @base-accent-color !important;
            //     padding: 3px 7px;
            //     border-radius: @component-border-radius;
            // }
        }
        autocomplete-suggestion-list {
            box-shadow: 0 1px 5px rgba(0,0,0,0.3) !important;

            .suggestion-list-scroller {
                // overflow-x: hidden !important;
                // .icon-letter {
                //     top: 0 !important;
                // }

                .selected {
                    i {
                        color: white;
                    }

                    // .word, .snippet-completion,
                    // .left-label, .right-label {
                    //     color: white !important;
                    // }
                    .icon-container > i {
                        background: rgba(255, 255, 255, 0.1) !important;
                    }
                    // .icon-letter {
                    //     color: white !important;
                    // }
                }
            }
            .suggestion-description {
                background: transparent !important;
                color: darken(@text-color, 10%) !important;
                border-top: 1px solid darken(@base-background-color, 4%);
                box-shadow: inset 0px 1px darken(@base-accent-color, 2%);

                .suggestion-description-content,
                .suggestion-description-more-link {
                    font-size: @font-size !important;
                }
            }
        }
    }

    // Minimap styling
    // https://atom.io/packages/minimap
    atom-text-editor-minimap {
        /deep/ .minimap-visible-area {
            background: transparent;

            &:after {
                background: fadeout(@accent-color-subtle, 50%) !important;
            }
        }
    }
}

// Settings specific styling
.settings-view {
    .config-menu {
        min-width: 175px;
        max-width: 175px;
        border-right: none;
        background: transparent;

        .button-area {
            margin: 0;

            .btn {
                text-align: left;
                height: 37px;
                border-radius: 0;
                padding: 10px 15px;
                line-height: normal;

                background: transparent;
                transition: none;

                &::before {
                    width: 16px;
                }
                &:hover {
                    background-color: rgba(255, 255, 255, 0.07);
                }
                &:active {
                    box-shadow: none;
                    color: #fff;
                }
            }
        }
    }
    .section-heading, .sub-section-heading, h1 {
        font-weight: 400 !important;
        font-size: 15px !important;
    }
    .btn.btn-info,
    .btn.btn-primary {
        background: @accent-color-bg;
        &:hover {
            background: lighten(@accent-color-bg, 3%) !important;
        }
    }
    .alert-info {
        background: @accent-color-bg;
        color: @text-color-highlight;
        border: none;
    }
    .package-card,
    .thumbnail {
        background: @background-color-highlight;
        box-shadow: 0px 1px 3px @app-background-color;
    }
    .checkbox {
        input {
            &:active {
                background: @accent-color-bg !important;
            }
            &:checked {
                background: @accent-color !important;
            }
        }
    }
}
